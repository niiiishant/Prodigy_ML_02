import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import silhouette_score, calinski_harabasz_score, davies_bouldin_score
import warnings
import os
warnings.filterwarnings("ignore")
os.environ['OMP_NUM_THREADS'] = '1'
df=pd.read_csv("https://docs.google.com/spreadsheets/d/1AZWFAeQX5rLt1owMoYj-N8mnFVkNv7fYl2_Tcr5eXEo/export?format=csv&usp=sharing")
df
	CustomerID	Gender	Age	Annual Income (k$)	Spending Score (1-100)
0	1	Male	19	15	39
1	2	Male	21	15	81
2	3	Female	20	16	6
3	4	Female	23	16	77
4	5	Female	31	17	40
...	...	...	...	...	...
195	196	Female	35	120	79
196	197	Female	45	126	28
197	198	Male	32	126	74
198	199	Male	32	137	18
199	200	Male	30	137	83
200 rows Ã— 5 columns

X = df[['Annual Income (k$)', 'Age', 'Spending Score (1-100)']]
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
sse = []
for k in range(2, 11):
    kmeans = KMeans(n_clusters=k)
    kmeans.fit(X_scaled)
    sse.append(kmeans.inertia_)
plt.plot(range(2, 11), sse)
[<matplotlib.lines.Line2D at 0x28688a3abd0>]

plt.xlabel('Number of Clusters (K)')
Text(0.5, 0, 'Number of Clusters (K)')

plt.ylabel('Sum of Squared Errors (SSE)')
Text(0, 0.5, 'Sum of Squared Errors (SSE)')

plt.title('Elbow Method')
Text(0.5, 1.0, 'Elbow Method')

plt.show()

kmeans = KMeans(n_clusters=5, n_init=10)
kmeans.fit(X_scaled)
KMeans
KMeans(n_clusters=5, n_init=10)

labels = kmeans.labels_
silhouette = silhouette_score(X_scaled, labels)
calinski_harabasz = calinski_harabasz_score(X_scaled, labels)
davies_bouldin = davies_bouldin_score(X_scaled, labels)

print(f'Silhouette Score: {silhouette:.3f}')
Silhouette Score: 0.417

print(f'Calinski-Harabasz Index: {calinski_harabasz:.3f}')
Calinski-Harabasz Index: 125.101

print(f'Davies-Bouldin Index: {davies_bouldin:.3f}')
Davies-Bouldin Index: 0.875

plt.scatter(X_scaled[:, 0], X_scaled[:, 1], c=labels)
<matplotlib.collections.PathCollection at 0x28691743b50>

plt.xlabel('Annual Income (k$)')
Text(0.5, 0, 'Annual Income (k$)')

plt.ylabel('Age')
Text(0, 0.5, 'Age')

plt.title('K-means Clustering Results')
Text(0.5, 1.0, 'K-means Clustering Results')

plt.show()

